<?php

namespace {{namespace}}Http\Controllers;

use Illuminate\Http\Request;
use Lenius\Basket\Facades\Basket;

class BasketController extends Controller
{
    /**
     * Create a new controller instance.
     *
     * @return void
     */
    public function __construct()
    {
        //$this->middleware('auth');
    }

    /**
     * Show the basket.
     *
     * @return \Illuminate\Http\Response
     */
    public function index()
    {
        $data['product'] = [
            'id' => 1,
            'name' => 'Mouse 1',
            'price' => 100,
            'quantity' => 1,
            'tax' => 25,
            'weight' => 200,
            'options' => json_decode('[{"name":"color", "type":"dropdown", "label":"Chose color", "required":false, "selected":null, "items":[{"name":"pink", "price":20, "weight":50}]}]')
        ];

        return view('ecommerce.basket')->with($data);
    }

    /**
     * Add demo data to basket
     *
     * @return \Illuminate\Http\Response
     */
    public function demo()
    {
        Basket::insert(array(
            'id'       => '1',
            'name'     => 'Mouse',
            'price'    => 100,
            'quantity' => 1,
            'tax'      => 25,
            'weight' => 200
        ));

        Basket::insert(array(
            'id'       => '2',
            'name'     => 'Pc',
            'price'    => 130,
            'quantity' => 2,
            'tax'      => 25,
            'weight' => 200,
            'options'  => [
                [
                    'name'  => 'size',
                    'value' => 'L',
                    'price' => 50,
                ],
            ],
        ));

        return redirect()->route('basket')->with('status', 'Card got demo data');
    }

    /**
     * Show basket debug.
     *
     * @return \Illuminate\Http\Response
     */
    public function debug()
    {
        dd(Basket::contents(true));
    }

    /**
     * Update basket with quantity.
     *
     * @return \Illuminate\Http\Response
     */
    public function update(Request $data)
    {
        $items = $data->input('quantity');

        if($items) {
            foreach ($items as $itemIdentifier => $quantity) {
                if($item = Basket::item($itemIdentifier)) {
                    if($quantity > 0){
                        $item->quantity = $quantity;
                    }else{
                        $item->remove();
                    }
                }
            }
        }

        return redirect()->route('basket')->with('status', 'items updated');
    }

    /**
     * Inc basket item.
     *
     * @return \Illuminate\Http\Response
     */
    public function inc($itemIdentifier)
    {
        if($item = Basket::item($itemIdentifier)) {
            if($item->quantity > 0){
                $item->quantity++;
            }else{
                $item->remove();
            }
        }

        return redirect()->route('basket')->with('status', 'item '.$itemIdentifier.' inc!');
    }

    /**
     * Dec basket item.
     *
     * @return \Illuminate\Http\Response
     */
    public function dec($itemIdentifier)
    {
        if($item = Basket::item($itemIdentifier)) {
            if($item->quantity > 1){
                $item->quantity--;
            }else{
                $item->remove();
            }
        }

        return redirect()->route('basket')->with('status', 'item '.$itemIdentifier.' dec!');
    }

    /**
     * Delete basket item.
     *
     * @return \Illuminate\Http\Response
     */
    public function delete($itemIdentifier)
    {
        if($item = Basket::item($itemIdentifier)) {
            $item->remove();
        }

        return redirect()->route('basket')->with('status', 'item '.$itemIdentifier.' removed!');
    }

    /**
     * Destroy basket.
     *
     * @return \Illuminate\Http\Response
     */
    public function destroy()
    {
        Basket::destroy();
        
        return redirect()->route('basket')->with('status', 'Card destroyed!');
    }
}